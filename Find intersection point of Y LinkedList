// Leetcode Solution
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
         ListNode a = headA;
         ListNode b = headB;
         while(a!=b){
             a = a.next;
             b = b.next;
             if(a==b) return a;
             if(a==null) a = headB;
             if(b==null) b = headA;
         }
         return a;
    }
}



// Coding Ninjas Solution
public class Solution {
	public static int findIntersection(LinkedListNode<Integer> firstHead, LinkedListNode<Integer> secondHead) {
		LinkedListNode<Integer> a = firstHead;
		LinkedListNode<Integer> b = secondHead;
		if(a==b) return a.data;
		while(a!=b){
			a = a.next;
			b = b.next;
			if(a==b){
				if(a==null) return -1;
				return a.data;}
			if(a==null) a = secondHead;
			if(b==null) b = firstHead;
		}
		return a.data;
	}
}
